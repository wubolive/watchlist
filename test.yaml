pipeline {
    agent any
    tools {
        nodejs 'node-v14.15.5'
    }
    environment {
        NAMESPACES = 'ityxb'
        IMAGES_NAME = 'itcast-registry.cn-hangzhou.cr.aliyuncs.com/${NAMESPACES}/${JOB_NAME}'
    }
    stages {
	    stage('清除工作空间') {
            steps {
                cleanWs()
            }
        }
        stage('gitlab pull') {
            steps {
                echo '正在拉取代码...'
                checkout([$class: 'GitSCM',
                    branches: [[name: Git_Tag]],
                    doGenerateSubmoduleConfigurations: false,
                    extensions: [],
                    submoduleCfg: [],
                    userRemoteConfigs: [[
                    credentialsId: '5d9029ed-cb1d-4228-af21-9760bb96f5cc', url: Git_URL]]
                ])
            }
        }
        stage('Node build') {
           steps {
               script {
                    sh "npm install --registry=https://registry.npm.taobao.org/ --unsafe-perm"
                    sh "npm run build"
                }
            }
        }
        stage('docker build') {
            steps {
                sh "docker rmi ${IMAGES_NAME}:`expr ${BUILD_ID} - 2` || true"
                sh "docker build -t ${IMAGES_NAME}:${BUILD_ID} ."
                sh "docker tag ${IMAGES_NAME}:${BUILD_ID} ${IMAGES_NAME}:latest"
            }
        }
        stage('docker push') {
            steps {
                sh "docker push ${IMAGES_NAME}:${BUILD_ID}"
                sh "docker push ${IMAGES_NAME}:latest"
            }
        }
        stage('kube apply') {
            when {
              expression {
                currentBuild.result == null || currentBuild.result == 'SUCCESS'
              }
            }
              environment {
                  IMAGES_NAME = 'itcast-registry-vpc.cn-hangzhou.cr.aliyuncs.com/${NAMESPACES}/${JOB_NAME}'
              }
            steps {
                sh "kubectl --kubeconfig /root/.kube/config.xxzx set image deploy ${JOB_NAME} -n ${NAMESPACES} ${JOB_NAME}=${IMAGES_NAME}:${BUILD_ID} --record"
                sh "kubectl --kubeconfig /root/.kube/config.xxzx rollout status deploy ${JOB_NAME} -n ${NAMESPACES}"
            }
        }
    }
}